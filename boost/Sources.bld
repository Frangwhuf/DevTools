#define SKIP_AUTODISCOVER 1

#if $[WINDOWS_PLATFORM]
  #format straight
  #output $[TOPDIR]/bin/installBoost$[SCRIPT_EXT]
@echo Configuring Boost
@pushd $[osfilename $[TOPDIR]/boost/boost]
@call bootstrap.bat
@echo Buliding and installing Boost
@$[osfilename $[TOPDIR]/boost/boost/b2.exe] -j8 --clean --build-type=complete address-model=64
@$[osfilename $[TOPDIR]/boost/boost/b2.exe] -j8 --prefix=$[osfilename $[TOPDIR]] --includedir=$[osfilename $[TOPDIR]/inc] --layout=tagged --build-type=complete address-model=64 headers
@$[osfilename $[TOPDIR]/boost/boost/b2.exe] -j8 --prefix=$[osfilename $[TOPDIR]] --includedir=$[osfilename $[TOPDIR]/inc] --layout=tagged --build-type=complete address-model=64 stage
@$[osfilename $[TOPDIR]/boost/boost/b2.exe] -j8 --prefix=$[osfilename $[TOPDIR]] --includedir=$[osfilename $[TOPDIR]/inc] --layout=tagged --build-type=complete address-model=64 install
@copy $[osfilename $[TOPDIR]/boost/my_boost_config.hpp] $[osfilename $[TOPDIR]/inc/my_boost_config.hpp]
@$[osfilename $[TOPDIR]/boost/boost/b2.exe] -j8 --clean --build-type=complete address-model=64
@rmdir /S /Q bin.v2
@rmdir /S /Q stage
@rmdir /S /Q libs\config\checks\architecture\bin
@popd
@echo Finished
  #end $[TOPDIR]/bin/installBoost$[SCRIPT_EXT]
  #format straight
  #output $[TOPDIR]/bin/uninstallBoost$[SCRIPT_EXT]
@echo Uninstalling Boost
@pushd $[osfilename $[TOPDIR]/inc]
@del /S /F /Q boost
@rmdir /S /Q boost
@del /S /F /Q myboost_config.hpp
@cd $[osfilename $[TOPDIR]/lib]
@del libboost*
@del boost_*
@popd
@echo Finished.
  #end $[TOPDIR]/bin/uninstallBoost$[SCRIPT_EXT]
#else // $[WINDOWS_PLATFORM]
  #define bits $[shell getconf LONG_BIT]
  #print detected bits = $[bits]
  #format straight
  #output $[TOPDIR]/bin/installBoost$[SCRIPT_EXT]
pushd $[TOPDIR]/boost/boost
$[TOPDIR]/boost/boost/bootstrap.sh
$[TOPDIR]/boost/boost/bjam --clean --build-type=complete $[if $[eq $[bits],64],address-model=64]
$[TOPDIR]/boost/boost/bjam --prefix=$[TOPDIR] --includedir=$[TOPDIR]/inc --build-type=complete $[if $[eq $[bits],64],address-model=64] headers
$[TOPDIR]/boost/boost/bjam --prefix=$[TOPDIR] --includedir=$[TOPDIR]/inc --build-type=complete $[if $[eq $[bits],64],address-model=64] stage
$[TOPDIR]/boost/boost/bjam --prefix=$[TOPDIR] --includedir=$[TOPDIR]/inc --build-type=complete $[if $[eq $[bits],64],address-model=64] install
$[TOPDIR]/boost/boost/bjam --clean --build-type=complete $[if $[eq $[bits],64],address-model=64]
rm -rf $[TOPDIR]/boost/boost/bin.v2
rm -rf $[TOPDIR]/boost/boost/stage
popd
  #end $[TOPDIR]/bin/installBoost$[SCRIPT_EXT]
  #format straight
  #output $[TOPDIR]/bin/uninstallBoost$[SCRIPT_EXT]
pushd $[TOPDIR]/inc
rm -rf boost
cd $[TOPDIR]/lib
rm -f libboost*
popd
  #end $[TOPDIR]/bin/uninstallBoost$[SCRIPT_EXT]
  #print Warning, I don't know how to generate (un)install scripts for Boost/STLport on this system.
#endif // $[WINDOWS_PLATFORM]
